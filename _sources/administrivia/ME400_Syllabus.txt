{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ME 400 – Course Syllabus and Policies\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to ME 400!\n",
      "It's important that you understand the course and its policies.\n",
      "So take some time and read this document carefully!\n"
     ]
    }
   ],
   "source": [
    "messages = [\"Welcome to ME 400!\", \\\n",
    "  \"It's important that you understand the course and its policies.\", \\\n",
    "  \"So take some time and read this document carefully!\"]\n",
    "\n",
    "for m in messages:\n",
    "    print(m)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Contact Information\n",
    "\n",
    "- **Lecture** MW 1:30--2:20pm, DUE 1109\n",
    "- **Instructor**: Jeremy Roberts\n",
    "\n",
    "    - *Phone*: 785-532-7182\n",
    "    - *Email*: jaroberts@ksu.edu\n",
    "    - *Office*: Ward 137D\n",
    "    - *Office Hours*: M/W, 2:30-4:00pm (or by appointment; refer to my [calendar](https://calendar.google.com/calendar/embed?src=j.alyn.roberts%40gmail.com&ctz=America/Chicago) before suggesting a time)\n",
    "  \n",
    "- **Laboratories**\n",
    "    - *Lab 1*: F 7:30–9:20am, DUR 3056\n",
    "    - *Lab 2*: F 9:30–11:20am, DUR 3056\n",
    "    - *Lab 3*: F 2:30–4:20pm, DUR 3056\n",
    "  \n",
    "- **Graduate Teaching Assistants**\n",
    "    - Richard Reed\n",
    "        - *Email*: rlreed@ksu.edu\n",
    "        - *Office*: Ward 133B\n",
    "        - *Office Hours*: T 4–6pm\n",
    "    - Bolun Xu\n",
    "        - *Email*: blxu@ksu.edu\n",
    "        - *Office*: Ward Computer Lab\n",
    "        - *Office Hours*: M/W 4–5pm\n",
    "    \n",
    "- **Undergraduate Teaching Assistants**\n",
    "    - Ben Logan\n",
    "        - *Office*: Ward 133 \n",
    "        - *Office Hours*: T 2–3:30pm\n",
    "    - Aimee Neilsen\n",
    "    - Erin O'Toole\n",
    "        - *Office*: Ward 137D\n",
    "        - *Office Hours*: W 2:30–4pm     "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Course Description and Objectives\n",
    "\n",
    "*From the catalog*: The development and application of computer techniques to the problems of design and analysis in mechanical engineering, including computer programming (abstraction and problem solving; algorithms; control structures; input/output; functions; arrays and array processing).\n",
    "\n",
    "*My informal description*: ME 400 is all about teaching you, the student, how to use the computer to solve problems. We’ll use the Python programming language, which is as easy a language to learn as any I’ve encountered. The Python language offers much more with all of the add-on packages available, all for free. What you will come out of the class with, at the least, is (1) a basic ability to understand, implement, and debug computer programs and (2) knowledge of tools (symbolic and numerical) within the Python ecosystem that can be used to solve engineering problems.  \n",
    "\n",
    "Note, while the central core of this course is about the basics of programming, the course extends this core content to numerical and other applications.  In other words, do *not* expect this course to be just about \"coding.\" I repeat, this is *not* a \"coding\" course.\n",
    "\n",
    "*Specific objectives* (with corresponding ABET outcomes) include:\n",
    "\n",
    "1. A good understanding of the basics of computer programming [a, e, k]\n",
    "2. Proficiency in the Python programming language [a, k]\n",
    "3. Ability to program from scratch [k]\n",
    "4. Ability to use flow charts and other problem-solving skills [c, e]\n",
    "5. Ability to use basic numerical methods [a, b]\n",
    "6. Ability to use skills learned in ME 400 in later classes and career [e, k]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Textbook\n",
    "\n",
    "Although there are a plethora of good books on the Python language, there is a sufficient wealth of information online to learn the language without books. Most of the content I’ll present lives in these [online course notes](http://robertsj.github.io/me400_notes/index.html). Reading assignments will be based on this material in addition to supplementary material.  Lectures will have standalone slides that augment the readings.\n",
    "\n",
    "The notes (and slides) are organized by lecture.  Moreover, these notes are written using Jupyter notebooks, a format that lets you interactively program in a document-like environment---all in your browser.  These notebooks are easy to load and run, and students are encouraged to explore them interactively early in the course.\n",
    "\n",
    "The primary resource you'll need to access beyond the notes is the documentation for Python, NumPy, and SciPy.  Most of what you need will be right there when we program, but you can also look online at:\n",
    " - [www.python.org](http://www.python.org)\n",
    " - [www.numpy.org](http://www.numpy.org/)\n",
    " - [www.scipy.org](http://www.scipy.org)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Prerequisites\n",
    "\n",
    "Prerequisite or concurrent: MATH 340.   Historically, this class required MATH 551, but we'll cover the basics like vectors, matrices, matrix-matrix multiplication, matrix-vector multiplication, dot products, and vector norms along the way.\n",
    "\n",
    "In addition, this course sits in the middle of the MNE undergraduate curriculum. Consequently, I can count on you having had and to be able to apply knowledge learned in previous courses.  These previous courses include but are not limited to basic physics and calculus classes.  If something we do in this class requires that previously learned material,  *it is your responsibility* to review it as necessary.  \n",
    "\n",
    "Some examples of what I expect you to know:\n",
    " - know that acceleration is $a = \\frac{d^2 x}{dt^2}$ \n",
    " - know how to balance forces in simple trusses via free-body diagrams\n",
    " - know how to differentiate and integrate functions\n",
    " - be able to solve $\\frac{dy}{dt} + 2y(t) = t$ subject to $y(0) = 1$.\n",
    "\n",
    " \n",
    "\n",
    "## Related Courses\n",
    "\n",
    "For those seeking knowledge of the C language, consider CIS 209, C Programming for Engineers.  Those who like the material they learn in ME 400 may wish to consider ME 701, Development of Computer Applications in Mechanical Engineering, which is a course focused on the elements of scientific computing. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Amount of Study Required\n",
    "\n",
    "For the *average* student (with respect to reading and analytical abilities) to earn an *average* grade will require approximately **6 to 9 hours per week** of *study* outside of class.  This is consistent with [university policy](https://www.k-state.edu/provost/universityhb/fhsecf.html#F115), which suggests 2 outside hours per 1 in-class hour. Here, to study implies reading, preparation for lecture, solving homework sets, visiting with the instructor and GTAs, and anything else that contributes actively to the learning process.  Historically, roughly half the class has earned A's and B's, meaning the average grade is near the B/C cutoff.\n",
    "\n",
    "For the average student, I'd suggest the following breakdown of out-of-class work:\n",
    "\n",
    " - 2 hours per week reading, taking notes, and executing example code \n",
    " - 1 hour per week on pre-lecture activities\n",
    " - 3--6 hours per week on homework problems\n",
    " \n",
    "These times indicate *real*, *uninterrupted* times.  Glancing at the reading while watching TV, surfing Reddit, etc., will not do much for one's learning."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Lectures\n",
    "\n",
    "Lectures are an important part of the curriculum. Your job is to **come to lecture prepared** to learn and to engage in any discussions and other activities.  Activities will be assigned for each lecture, often as online quizzes to gauge understanding of the reading prior to lecture.  Some lectures may also include in-class activities; attendence is necessary to participate in these activities.\n",
    "\n",
    "The lectures in ME 400 will often be best thought of as hands-on, informal tutorials. If you have a laptop, you are encouraged to bring it to class to do in-class examples. If you do not have a laptop, I have approximately 5 old ones available for in-class use. Use of laptops should be limited to in-class examples and not for surfing and other activities unrelated to the lecture. The use of other electronic devices is distracting, so turn your phones to vibrate and put them away."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Netiquette and Discussion Expectations\n",
    "\n",
    "*Netiquette* is a set of rules for behaving properly online. Here are some points to consider when interacting with your peers while in this course:\n",
    "\n",
    "- Profanity is unprofessional and, therefore, unacceptable in this course.\n",
    "- Avoid using ALL CAPITALS, as it seems to suggest virtual “shouting.”\n",
    "- Although not all online interactions are formal, you should do your best to use proper spelling and grammar. Use of \"textspeak\" is strictly prohibited b/c it is unprofessional imho.\n",
    "- Respect others’ opinions and avoid \"flaming\" (publicly attacking or insulting) your peers. We’re here to learn together, and being nice helps us do that.\n",
    "\n",
    "Part of good netiquette consists of using appropriate language (and structure) in emails (should they be necessary). Here's an example of a suitable (but still informal, say \"business casual\") email:\n",
    "\n",
    "    Hi Prof. Roberts,\n",
    "\n",
    "    Here is my important message.\n",
    "\n",
    "    Thanks,\n",
    "\n",
    "    Jane Appleseed\n",
    "\n",
    "In follow-up emails, the greeting (Hi...) and signature (Thanks...) are less important and may be omitted. Some folks might prefer a bit more formality, while some would accept less formality. When interacting with me, the “business casual\" approach is just fine.\n",
    "\n",
    "See also the University policy on classroom conduct below."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Laboratories and Homework\n",
    "\n",
    "Laboratories are interactive experiences and will be comprised of a quick review and exercises that must be completed within the laboratory session.  Attendance in laboratory sessions is expected, and **credit can be earned only if you are present**. Any remaining time may be used to continue on at-home exercises, which will involve more in-depth problems.\n",
    "\n",
    "Students *will work in pairs* as part of some laboratories.  In some laboratories, formal *pair programming* will be required as a learning activity, with specific instructions to be given as needed.  \n",
    "\n",
    "However, students should complete homeworks as individual efforts.  Let me be more specific.  It is allowed to work informally on assignments, but the final product (usually, \"code\") you submit must be your own.  Do not look at someone else's code, and do not share your own code. A good \"litmus test\" is to ask yourself, \"Can I explain everything I've submitted to the instructor?\"  You'll be tested based on *your* knowledge of programming, so do yourself a favor and complete the homework on your own. (Please also see the discussion below on the Honor Code and plagiarism.)\n",
    "\n",
    "For homework questions, students should *visit office hours* or *use the discussion board*.  If emailed, the course personnel will direct students to the discussion board unless the question is a private matter.  The discussion board is preferred so that (1) a given question need only be asked (and answered) once, and (2) a record of such questions can be kept for posterity. Moreover, if a homework is due at 11:59 pm, don't wait until 5 pm to post questions and expect immediate responses."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Assessment\n",
    "\n",
    "Assessment for the course is based on the following breakdown:\n",
    "\n",
    "- Formative Activities (10%)\n",
    "- Laboratory Exercises (10%)\n",
    "- Homework Exercises (20%)\n",
    "- Examinations (60%)\n",
    "\n",
    "As a starting point, the standard 90/80/70/60 rule will be applied for A/B/C/D. These will never be shifted higher, though they may be adjusted lower, if deemed appropriate, at the assignment of final grades.  My rule of thumb, subject to change, is that each grade boundary is shifted down by the average numerical score of the top 5% of the students.  Hence, if the top five scores in a class of 100 students are 100, 99, 98, 97, and 96, their average is 98, and the B cutoff would be shifted down to 78, a C to 68, etc. This policy protects students overall from an exam question or homework sets that are particularly challenging (relative to past semesters).  This is applied to the *overall* score, i.e., individual exams or other tasks are not adjusted.  Any grade shifts will be announced during the *last week of class*.\n",
    "\n",
    "Three grades are computed in the course, and students keep the best of these.  The grade options are:\n",
    "\n",
    "  - **Option 1** includes **all** formative activities (with three drops), **all** laboratories (with two drops), Homeworks 1-7 (with two drops), and Exams 1 and 2.  Students can earn **up to a C** with their Option 1 score.   \n",
    "  - **Option 2** includes **all** formative activities  (with three drops), **all** laboratories  (with two drops), Homeworks 1-11 (with two drops), and Exams 1-3. Students can earn **up to a B** with their Option 2 score.\n",
    "  - **Option 3** includes the entire course (with the same drops) and culminates with the fourth, final examination.  **Students can only earn an A through Option 3**.\n",
    "\n",
    "Canvas cannot compute multiple grades! Rather, Canvas will always be set up to compute the Option 3 score (i.e., the whole course).  Students must keep track of their grade and should verify it with me as needed.\n",
    "\n",
    "In summary: at the end of the course, we compute three grades for you corresponding to each option.  You keep the best one of the bunch.  No need to let us know!\n",
    "\n",
    "### Formative Activities\n",
    "\n",
    "Before most (if not all) lectures, students will complete a \"pre-lecture\" activity.  These activities will most often take the form of an online (Canvas-based) quiz with questions that cover the reading assigned for the lecture in question.  These activities may also include more open-ended responses from students.  In cases where there is a \"right\" answer, students will be given as many chances as needed to answer the question correctly.   For these cases, \"right\" answers are automatically shown after the due time.  Some lectures will also have in-class activities (which may be short problems, worksheets, etc.).  These in-class activities can only be completed if you attend the lecture, and they will not be announced. The **lowest three scores will be dropped** from the calculuted score, so there are **no make-up activities**.  Hence, if you are absent from class for any reason (official or not), there is no make-up activity.\n",
    "\n",
    "\n",
    "\n",
    "### Laboratory Exercises\n",
    "\n",
    "The purpose of the laboratories is to review and to put in practice the concepts and tools discussed in lecture.  Part of this experience will be laboratory exercises that must be completed in the alotted laboratory time.  Generally, full credit is earned if students attend the laboratory and put forth a good-faith effort. There are 12 laboratories.  \n",
    "\n",
    "**Students may drop their lowest two scores (which can include absences of any kind)**.  Consequently, **no makeups**\n",
    "will be allowed.  You do not need to inform the instructor of absences; you simply will not earn credit for that laboratory.  Absences of *any k\n",
    "\n",
    "### Homework\n",
    "\n",
    "Each homework extends the topics covered in the laboratory sessions.  There are 12 homework assignments.  **The two lowest scores are dropped**.  \n",
    "\n",
    "All homework is due at 11:59pm on the due date via electronic submission (unless otherwise\n",
    "specified in class).  Unless otherwise announced, this due date will be the Wednesday before the \n",
    "following laboratory (or, in some cases, an exam).  Generally, homework will be posted one week in advance.\n",
    "\n",
    "No late homework is accepted unless a class-wide extension is given.  \n",
    "\n",
    "Homework solutions will not be posted, but *students may visit office hours to see the solution*. \n",
    "\n",
    "**Important**: all homework should run without a run-time error.  If running a submission leads immediately to an error, grading it becomes very difficult.  A homework testing file will be provided with instructions on its use.  Students should use this tool (following the given guidelines) to ensure their programs execute without error or risk automatic point deductions.  \n",
    "\n",
    "### Examinations\n",
    "\n",
    "#### Mid-Term Examinations\n",
    "\n",
    "The three mid-term examinations are in-laboratory examinations and will consist of a written (pen and paper) and coded (Python program, etc.) component.  Students may use one 8.5'' by 11'' sheet of hand-written notes for both components.  For the coded component, the internet, past homeworks, and any other resources are *not* to be used.\n",
    "\n",
    "With multiple laboratory sessions, a number of students will complete an examination after their classmates.  Although all students should expect unique exams, please note that any communication regarding the exam before all exams are submitted is prohibited, and *any violations of this policy will result in an XF in the course*.\n",
    "\n",
    "#### Final Examination\n",
    "\n",
    "The final examination consists of only a written component and will be completed in the normal lecture room.  One sheet of hand-written notes may be used, but no other resources are allowed.  The final exam emphasizes the last quarter of the course but should be considered cumulative.  \n",
    "\n",
    "#### Accomodations and Make-Up Examinations\n",
    "\n",
    "Any student with a documented disability who requests more time on examinations *must inform me two weeks prior to the first examination* or risk forfeiting the accomodation.  \n",
    "\n",
    "Make-up examinations will be offered only when absolutely necessary, e.g., for serious personal issues (e.g., documented illness) or official school business (e.g., documented conference).\n",
    "\n",
    "### Contesting Grades, etc.\n",
    "\n",
    "If you wish to request a regrade on any assessed task, you must inform a GTA within 48 hours of when the grade is posted and (1) describe what the task was, (2) what you think was marked incorrectly, and (3) why you think your approach was correct.  For reference, grades for homeworks (with automated feedback) and exams (with rubric) are posted the Monday after their submission.  Thus, re-grade requests should generally be submitted by close of business on the following Wednesday.   \n",
    "\n",
    "### Extra Credit and End-of-Semester Charity\n",
    "\n",
    "The *only* extra credit available in ME 400 is for extra problems on homeworks and exams.  These arise most often when (1) I want to encourage a problem to be tackled even though it is a bit open ended or difficult, or (2) when an exam is written with one too many problems and I simply don't want to delete one.  These problems are never planned, and announced only when you see it.  In other words, *do not plan on extra credit* -- the real world has no analog.\n",
    "\n",
    "The best way to earn better scores is to ask for help early and often. The end of the semester (e.g., the last week, or after the final) is *not* the time to start getting this help or to ask for favorable rounding.  I repeat: ask for help early and often.  \n",
    "\n",
    "### Assessing Me\n",
    "\n",
    "I'm open to (and actively seek) feedback continuously.  However, formal assessment of the course and its personnel (via TEVALs) will take place during the final laboratory session, which also serves as a review for the final exam."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Course Schedule\n",
    "\n",
    "| Lecture   |  Date               | Topics                                                       | HW Due            | \n",
    "|-----------|---------------------|--------------------------------------------------------------|-------------------| \n",
    "| 1 | Wednesday, January 23 | Administrivia. Overview of Python. Spyder and Jupyter. Basic types. | | \n",
    "|  | Friday, January 25 | LAB 1 | | \n",
    "| 2 | Monday, January 28 | Basic operators and common, built-in functions. | | \n",
    "| 3 | Wednesday, January 30 | Basic data processing with NumPy and Matplotlib. | HW 1| \n",
    "|  | Friday, February 1 | LAB 2 | | \n",
    "| 4 | Monday, February 4 | More on NumPy arrays.  Slicing operations.   | | \n",
    "| 5 | Wednesday, February 6 | Algorithms, flowcharts, and pseudocode.  | HW 2| \n",
    "|  | Friday, February 8 | LAB 3 | | \n",
    "| 6 | Monday, February 11 | Conditional statements and the structure of Python programs | | \n",
    "| 7 | Wednesday, February 13 | More on conditionals.  The graphical debugger. | HW 3| \n",
    "|  | Friday, February 15 | LAB 4 | | \n",
    "| 8 | Monday, February 18 | For and while loops.  | | \n",
    "| 9 | Wednesday, February 20 | More on for and while loops. | HW 4| \n",
    "|  | Friday, February 22 | EXAM 1 (Lectures 1-8, HW 1-4) | | \n",
    "| 10 | Monday, February 25 | Python container types: lists, tuples, and dictionaries. | | \n",
    "| 11 | Wednesday, February 27 | Processing text data. | | \n",
    "|  | Friday, March 1 | LAB 5 | | \n",
    "| 12 | Monday, March 4 | Basics of functions. | | \n",
    "| 13 | Wednesday, March 6 | More on functions. | HW 5| \n",
    "|  | Friday, March 8 | LAB 6 | | \n",
    "|  | Monday, March 11 | SPRING BREAK | | \n",
    "|  | Wednesday, March 13 | SPRING BREAK | | \n",
    "|  | Friday, March 15 | SPRING BREAK | | \n",
    "| 14 | Monday, March 18 | Search algorithms; linear, binary, and meaning of order. Built-in magic. | | \n",
    "| 15 | Wednesday, March 20 | Sorting; bubble and merge.  Built-in magic. | HW 6| \n",
    "|  | Friday, March 22 | LAB 7 | | \n",
    "| 16 | Monday, March 25 | Developing modules and packages.  Navigating more complex programs. | | \n",
    "| 17 | Wednesday, March 27 | Unit testing and defensive programming. | HW 7| \n",
    "|  | Friday, March 29 | EXAM 2 (Lectures  9-17, HW 1-7) | | \n",
    "| 18 | Monday, April 1 | Numerical differentiation | | \n",
    "| 19 | Wednesday, April 3 | Numerical integration | | \n",
    "|  | Friday, April 5 | LAB 8 | | \n",
    "| 20 | Monday, April 8 | Quick review of $\\mathbf{Ax}=\\mathbf{b}$.  Elimination and numpy.linalg. | | \n",
    "| 21 | Wednesday, April 10 | Root finding | HW 8| \n",
    "|  | Friday, April 12 | LAB 9 | | \n",
    "| 22 | Monday, April 15 | Optimization | | \n",
    "| 23 | Wednesday, April 17 | Modeling Data with Least-Squares Fits | HW 9| \n",
    "|  | Friday, April 19 | LAB 10 | | \n",
    "| 24 | Monday, April 22 | Modeling Data with Interpolation | | \n",
    "| 25 | Wednesday, April 24 | Brief review of ODEs.  Numerical solution of IVPs using Euler's methods. | HW 10| \n",
    "|  | Friday, April 26 | LAB 11 | | \n",
    "| 26 | Monday, April 29 | Systems of IVPs. | | \n",
    "| 27 | Wednesday, May 1 | Numerical solution of BVPs using finite differences. | HW 11| \n",
    "|  | Friday, May 3 | EXAM 3 (Lectures 18-25, HW 1-11) | | \n",
    "| 28 | Monday, May 6 | Basics of symbolic computing with SymPy: symbols, expressions, and equations. | | \n",
    "| 29 | Wednesday, May 8 | Symbolic solution of differential equations. | | \n",
    "|  | Friday, May 10 | LAB 12 - Exercises | HW 12| \n",
    "|  | Tuesday, May 14 | FINAL EXAM - 11:50 AM-1:40 PM - In Normal Lecture Room | | \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Academic Honesty\n",
    "\n",
    "### The University's Statement\n",
    "\n",
    "Kansas State University has an Honor System based on personal integrity, which is presumed\n",
    "to be sufficient assurance that, in academic matters, one’s work is performed honestly and\n",
    "without unauthorized assistance. Undergraduate and graduate students, by registration, ac-\n",
    "knowledge the jurisdiction of the Honor System. The policies and procedures of the Honor\n",
    "System apply to all full and part-time students enrolled in undergraduate and graduate courses\n",
    "on-campus, off-campus, and via distance learning. The honor system website can be reached\n",
    "via the following URL: www.ksu.edu/honor . A component vital to the Honor System is the\n",
    "inclusion of the Honor Pledge which applies to all assignments, examinations, or other course\n",
    "work undertaken by students. The Honor Pledge is implied, whether or not it is stated: \"On\n",
    "my honor, as a student, I have neither given nor received unauthorized aid on this academic\n",
    "work.\" A grade of XF can result from a breach of academic honesty. The F indicates failure in\n",
    "the course; the X indicates the reason is an Honor Pledge violation.\n",
    "\n",
    "### My Statement\n",
    "\n",
    "Students in ME 400 are expected to uphold the Honor Pledge.  **Students who are identified to have collaborated on or otherwise received unauthorized assistance on examinations will automatically earn an XF in the course**.   Infractions related to other graded tasks will be judged on a case by case basis.\n",
    "\n",
    "\n",
    "### On Plagiarism\n",
    "\n",
    "Programming can be hard, and often, students may find that \"copying and pasting\" from the internet is the path of least resistance: *but this can easily lead to plagiarism*.\n",
    "\n",
    "In the simplest terms, plagiarism is the act of using the work of someone else as part of your own without saying so. Probably the most common form of plagiarism involves the uncredited borrowing of text (or ideas) in written works (like those reports in Writing 101). However, plagiarism is not just using another’s text verbatim in your report: it includes using someone else’s solution for a problem, whether it comes from another student or a solution manual. This is a particular case of which many engineering students are not aware but may be guilty.\n",
    "\n",
    "To avoid plagiarizing, the ideas you present in your problem solutions and laboratory reports must be your own. When you adapt the ideas of another, you need to reference those ideas correctly. If you fail to do so, you are committing academic dishonesty, for which the potential penalties are described in the statement below.\n",
    "\n",
    "For some basic tips on how to avoid plagiarism in writing, see http://en.writecheck.com/ways-to-avoid-plagiarism.\n",
    "\n",
    "\n",
    "## Students with Disabilities\n",
    "\n",
    "Students with disabilities who need classroom accommodations, access to technology, or information about emergency building/campus evacuation processes should contact the Student Access Center and/or their instructor. Services are available to students with a wide range of disabilities including, but not limited to, physical disabilities, medical conditions, learning disabilities, attention deficit disorder, depression, and anxiety. If you are a student enrolled in\n",
    "campus/online courses through the Manhattan or Olathe campuses, contact the Student Access Center at accesscenter@k-state.edu , 785-532-6441; for Salina campus, contact the Academic and Career Advising Center at acac@k-state.edu, 785-826-2649.\n",
    "\n",
    "\n",
    "## Expectations for Classroom Conduct\n",
    "\n",
    "All student activities in the University, including this course, are governed by the Student Judicial Conduct Code as outlined in the Student Governing Association By Laws, Article VI, Section 3, number 2. Students who engage in behavior that disrupts the learning environment may be asked to leave the class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Thanks for reading!\n"
     ]
    }
   ],
   "source": [
    "message = \"!gnidaer rof sknahT\"\n",
    "print(message[::-1])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
